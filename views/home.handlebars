<main class="container">
      <div class="form-group mx-sm-3 mb-2">
        <input type="text" class="form-control" id="createDbInput" placeholder="Insert Database">
		<button id="createDb" class="btn btn-primary mb-2">Create Database</button>
      </div>

      <div class="form-group mx-sm-3 mb-2">
        <input type="text" class="form-control" id="deleteDbInput" placeholder="Database to Delete">
		<button id="deleteDb" class="btn btn-danger mb-2">Delete A Database</button>
      </div>

      {{!-- <div class="form-group mx-sm-3 mb-2">
        <input type="text" class="form-control" id="dbToRename" placeholder="Insert Database">
        <input type="text" class="form-control" id="replacementName" placeholder="Insert Database">
		<button id="renameDb" class="btn btn-warning mb-2">Rename A Database</button>
      </div> --}}

      <button id="listDb" class="btn btn-info mb-2">List Your Databases</button>
	<div id="databases">
		
	</div>
</main>

<script type="text/javascript">

	const databaseListDiv = document.querySelector('#databases');


	// Callback functions ==============================================================================

    const createDb = event => {
        event.preventDefault();
        const dbName = document.querySelector('#createDbInput').value;
		if (dbName) {
			// xhrRequest is a function that will 
			xhrRequest('/makeDB', 'post', dbName);
		}
    }

	const deleteDb = event => {
		event.preventDefault();
		const dbName = document.querySelector('#deleteDbInput').value;
		console.log(dbName);
		xhrRequest('/deleteDB', 'post', dbName);
	}

	/*const renameDb = event => {
		event.preventDefault();
		const dbName = document.querySelector('#')
	}*/

	const listDbs = event => {
		event.preventDefault();
		const xhr = new XMLHttpRequest();
		xhr.open('GET', '/listDBs', true);
		xhr.onload = function() {
			if (this.status >= 200 && this.status < 400) {
				const databaseList = JSON.parse(this.responseText);
				const unorderedList = document.createElement('ul');
				databaseList.forEach( database => {
					let listItem = document.createElement('li');
					listItem.textContent = database;
					unorderedList.appendChild(listItem);
				})
				databaseListDiv.appendChild(unorderedList);
			}
		}
		xhr.send();
	}



	// Event Listeners =============================================================================

    const createDbButton = document.querySelector('#createDb');
    createDbButton.addEventListener('click', (event) => {
		createDb(event)
	});

	const deleteDbButton = document.querySelector('#deleteDb');
	deleteDbButton.addEventListener('click', (event) => {
		deleteDb(event);
	});

	const listDbButton = document.querySelector('#listDb');
	listDbButton.addEventListener('click', (event) => {
		listDbs(event);
	});

	/* 
	const renameDbButton = document.querySelector('#renameDb');
	renameDbButton.addEventListener('click', somefunchere)
	*/




	// AJAX function commonly used in all of our callback functions =========================================
	
	function xhrRequest(route, method, databaseName = null) {
		// Error Check
		if (route === undefined || method === undefined) {
			console.log("You need to provide both a Route and Method");
			return;
		}

		// Body to send to API
		const body = {
			databaseName
		}
		// Create XHR instance to communicate with server
        const xhr = new XMLHttpRequest();
        xhr.open(method.toUpperCase(), route, true);
        xhr.onload = function() {
			if (this.status >= 200 && this.status < 400) {
				console.log(this.responseText);
			}
		}
		xhr.setRequestHeader("Content-type", "application/json");
		xhr.send(JSON.stringify(body));
	}

</script>
